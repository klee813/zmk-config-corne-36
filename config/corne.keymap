/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/rgb.h>

//&led_strip {
//    chain-length = <27>;
//};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q         |  W  |  E  |   R    |  T  |   |  Y  |   U     |  I  |  O  |  P       |
// |  A(CTRL)   |  S  |  D  |   F    |  G  |   |  H  |   J     |  K  |  L  | ;:(CTRL) |
// |  Z(SHIFT)  |  X  |  C  |   V    |  B  |   |  N  |   M     |  ,< |  .> | /?(SHIFT)|
//                    | GUI |TAB(LWR)| ENT |   | SPC |BSPC(RSE)| ALT |
                        bindings = <
        &trans   &kp Q       &kp W    &kp E     &kp R     &kp T         &kp Y     &kp U      &kp I     &kp O   &kp P            &trans
        &trans   &mt LCTRL A &kp S    &kp D     &kp F     &kp G         &kp H     &kp J      &kp K     &kp L   &mt RCTRL SEMI   &trans
        &trans   &mt LSHFT Z &kp X    &kp C     &kp V     &kp B         &kp N     &kp M      &kp COMMA &kp DOT &mt RSHFT FSLH   &trans
                                      &kp LGUI  &lt 1 TAB &kp RET       &kp SPACE &lt 2 BSPC &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
// | ESC | HOME| PGUP| PGDN| END |   |  '  |  "  |  `  |  ~  |     |
//             |     |     |     |   |     |     |     |
                        bindings = <
        &trans   &kp N1   &kp N2      &kp N3        &kp N4        &kp N5              &kp N6   &kp N7   &kp N8    &kp N9     &kp N0 &trans
        &trans   &trans   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2        &kp LEFT &kp DOWN &kp UP    &kp RIGHT  &trans &trans
        &trans   &kp ESC  &kp HOME    &kp PG_UP     &kp PG_DN     &kp END             &kp SQT  &kp DQT  &kp GRAVE &kp TILDE  &trans &trans
                                      &trans        &trans        &trans              &trans   &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |   !   |   @   |   #   |   $   |   %   |   |  ^  |  &  |  *  |  (  |  )  |
// |RGB_TOG|RGB_HUI|RGB_SAI|RGB_VAI|       |   |  -  |  =  |  [  |  ]  |  \  | 
// |RGB_MOD|RGB_HUD|RGB_SAD|RGB_VAD|QK_BOOT|   |  _  |  +  |  {  |  }  | "|" |
//                   |     |       |       |   |     |     |     |
                        bindings = <
        &trans   &kp EXCL           &kp AT           &kp HASH         &kp DLLR          &kp PRCNT             &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
        &trans   &rgb_ug  RGB_TOG   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI   &trans                &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &trans
        &trans   &rgb_ug RGB_EFF    &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD   &bootloader           &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &trans
                                                     &trans           &trans            &trans                &trans    &trans    &trans
                        >;
                };
        };
};
